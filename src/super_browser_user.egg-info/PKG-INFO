Metadata-Version: 2.4
Name: super-browser-user
Version: 0.1.0
Summary: AI驱动的浏览器自动化工具集
Author-email: Shiyuan Chen <your.email@example.com>
License: MIT
Requires-Python: >=3.11
Description-Content-Type: text/markdown
Requires-Dist: fastapi>=0.109.0
Requires-Dist: uvicorn[standard]>=0.27.0
Requires-Dist: pydantic>=2.5.0
Requires-Dist: pydantic-settings>=2.1.0
Requires-Dist: browser-use>=0.1.0
Requires-Dist: playwright>=1.40.0
Requires-Dist: httpx>=0.26.0
Requires-Dist: langchain-google-genai>=1.0.0
Requires-Dist: google-generativeai>=0.3.0
Requires-Dist: sqlalchemy>=2.0.25
Requires-Dist: psycopg2-binary>=2.9.9
Requires-Dist: alembic>=1.13.1
Requires-Dist: redis>=5.0.1
Requires-Dist: celery>=5.3.6
Requires-Dist: pandas>=2.1.4
Requires-Dist: numpy>=1.26.3
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: click>=8.1.7
Requires-Dist: jinja2>=3.1.3
Provides-Extra: dev
Requires-Dist: pytest>=7.4.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: pytest-cov>=4.1.0; extra == "dev"
Requires-Dist: black>=23.12.0; extra == "dev"
Requires-Dist: isort>=5.13.0; extra == "dev"
Requires-Dist: flake8>=6.1.0; extra == "dev"
Requires-Dist: mypy>=1.7.0; extra == "dev"

# Super Browser User

> AI 驱动的浏览器自动化工具集 - 智能收集旅游攻略并生成个性化旅行计划

[![Python 3.11+](https://img.shields.io/badge/python-3.11+-blue.svg)](https://www.python.org/downloads/)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)

## 📖 学习指南

**推荐学习路径：**

1. 📘 **README.md** (本文档) - 快速开始和基本使用
2. 📐 **[docs/architecture/ARCHITECTURE.md](docs/architecture/ARCHITECTURE.md)** - 架构设计 ⭐
3. 🔧 **[CLAUDE.md](./CLAUDE.md)** - 开发指南和 browser-use 参考
4. 💻 **[src/](src/)** - 源代码详细注释
5. 🌐 **[docs/api/API_DESIGN.md](docs/api/API_DESIGN.md)** - API 文档
6. ⚙️ **[docs/development/SETUP.md](docs/development/SETUP.md)** - 开发环境设置

---

## ✨ 特性

- 🤖 **AI 驱动**: 使用 Google Gemini 2.0 Flash 进行智能内容理解和行程规划
- 🌐 **自动化收集**: 基于 browser-use 和 Playwright 的高效数据采集
- 📊 **智能分析**: 自动识别高质量攻略，计算互动率和影响力评分
- 🗺️ **行程生成**: AI 自动生成个性化旅行计划，包含景点、美食、预算
- 🚀 **高性能**: 支持并发收集，3x 速度提升
- 🔌 **多接口**: 提供 REST API、CLI、Web UI (计划中)
- 🎯 **Scout 模式**: 三阶段收集（探测 → 列表 → 详情），成功率 95%+

## 🚀 快速开始

### 前置要求

- Python >= 3.11
- PostgreSQL (可选，支持内存模式)
- Redis (可选，支持无缓存模式)

### 安装

```bash
# 1. 克隆项目
git clone <repository-url>
cd super-browser-user

# 2. 安装 uv (Python 包管理器)
curl -LsSf https://astral.sh/uv/install.sh | sh

# 3. 创建虚拟环境并安装依赖
uv venv
source .venv/bin/activate  # Windows: .venv\Scripts\activate
uv pip install -e .

# 4. 安装 Playwright 浏览器
uvx playwright install chromium --with-deps --no-shell

# 5. 配置环境变量
cp .env.example .env
# 编辑 .env，填写 GEMINI_API_KEY
```

**获取免费 Gemini API 密钥**: https://aistudio.google.com/app/apikey

### 使用 CLI

```bash
# 收集旅游攻略
uv run super-browser collect "成都" --max-posts 10

# 生成旅行计划
uv run super-browser plan "成都" --days 3 --output plan.json

# 查看攻略摘要
uv run super-browser summary "成都"
```

### 使用 API

```bash
# 启动 API 服务器
uv run uvicorn apps.api.main:app --reload

# 访问 API 文档
open http://localhost:8000/docs
```

**API 示例**:

```bash
# 收集攻略
curl -X POST http://localhost:8000/api/v1/guides/collect \
  -H "Content-Type: application/json" \
  -d '{"destination": "成都", "max_posts": 10}'

# 生成旅行计划
curl -X POST http://localhost:8000/api/v1/travel/plans \
  -H "Content-Type: application/json" \
  -d '{"destination": "成都", "days": 3}'
```

## 项目架构

```
super-browser-user/
├── src/                          # 源代码
│   ├── core/                     # 核心业务逻辑
│   │   ├── domain/               # 领域模型
│   │   ├── services/             # 业务服务
│   │   └── repositories/         # 数据仓储
│   ├── infrastructure/           # 基础设施
│   │   ├── external/             # 外部服务集成
│   │   │   ├── xiaohongshu/      # 小红书收集器
│   │   │   └── ai/               # Gemini AI 客户端
│   │   ├── database/             # 数据库
│   │   ├── cache/                # Redis 缓存
│   │   └── utils/                # 工具类
│   └── shared/                   # 共享组件
├── apps/                         # 应用层
│   ├── api/                      # FastAPI 应用
│   └── cli/                      # 命令行工具
├── docs/                         # 文档
│   ├── architecture/             # 架构文档
│   ├── development/              # 开发指南
│   └── api/                      # API 文档
└── tests/                        # 测试
```

详细架构说明请参考：[架构文档](docs/architecture/ARCHITECTURE.md)

## 核心功能

### 1. 旅游攻略收集

从小红书自动收集旅游攻略，支持：

- 🎯 Scout 探测模式：智能识别页面结构
- ⚡ 并发收集：2-3x 速度提升
- 📊 质量评估：自动计算互动率
- 🔄 失败重试：提高成功率

### 2. 智能行程生成

基于收集的攻略生成旅行计划：

- 🧠 AI 理解：提取景点、美食、注意事项
- 📅 日程规划：自动安排每日行程
- 💰 预算估算：提供成本参考
- 🗺️ 路线优化：TSP 算法优化游览顺序 (计划中)

### 3. 数据分析

- 📈 互动率分析：识别高质量内容
- 👤 用户影响力评分：评估作者可信度
- 🏆 热门景点排名：基于提及频率
- ⭐ 评分聚合：综合多篇攻略

## 技术栈

- **AI 模型**: Google Gemini 2.0 Flash (免费)
- **浏览器自动化**: browser-use + Playwright
- **Web 框架**: FastAPI
- **数据库**: PostgreSQL + SQLAlchemy
- **缓存**: Redis
- **任务队列**: Celery (计划中)
- **CLI**: Click
- **包管理**: uv

## 开发指南

详细开发文档请参考：

- [开发环境设置](docs/development/SETUP.md)
- [API 设计文档](docs/api/API_DESIGN.md)
- [数据库设计](docs/database/DATABASE_DESIGN.md) (计划中)
- [贡献指南](docs/contributing/CONTRIBUTING.md) (计划中)

### 运行测试

```bash
pytest tests/ -v --cov=src
```

### 代码格式化

```bash
# 格式化代码
black src/ apps/ tests/

# 排序导入
isort src/ apps/ tests/

# 代码检查
flake8 src/ apps/
mypy src/ apps/
```

## 使用场景

### 场景 1: 旅行规划

快速生成目的地旅行计划：

```bash
uv run super-browser plan "成都" --days 3 --output chengdu_plan.json
```

### 场景 2: 攻略研究

收集并分析旅游攻略：

```bash
uv run super-browser collect "成都" --max-posts 20
uv run super-browser summary "成都"
```

### 场景 3: API 集成

集成到您的应用中：

```python
from src.core.services.guide_collector import GuideCollectorService

service = GuideCollectorService()
guides = await service.collect_guides("成都", max_posts=10)
```

## 配置说明

主要配置项 (`.env`):

```env
# AI 配置
GEMINI_API_KEY=your_key_here
GEMINI_MODEL=gemini-2.0-flash-exp

# 数据库配置 (可选)
DATABASE_URL=postgresql://user:pass@localhost:5432/super_browser_user

# Redis 配置 (可选)
REDIS_URL=redis://localhost:6379/0

# 应用配置
DEBUG=true
LOG_LEVEL=INFO
```

完整配置说明请参考：[.env.example](.env.example)

## 路线图

- [x] 基础攻略收集功能
- [x] AI 行程生成
- [x] REST API
- [x] CLI 工具
- [ ] Web UI
- [ ] 用户账号系统
- [ ] 携程 API 集成 (实时价格查询)
- [ ] 高德地图 API 集成 (路线规划)
- [ ] 账号成长分析功能
- [ ] 导出为 PDF/Word
- [ ] 多语言支持

## 常见问题

**Q: Gemini API 免费吗？**

A: 是的，Gemini Flash 提供免费额度（每分钟 15 次请求，每天 1500 次），足够个人使用。

**Q: 可以不使用数据库吗？**

A: 可以，项目支持内存模式，不配置 `DATABASE_URL` 即可使用内存存储。

**Q: 收集速度慢怎么办？**

A: 启用并发模式：`--concurrent` 参数，可提升 2-3 倍速度。

**Q: 遇到反爬虫怎么办？**

A: 使用 Browser Use Cloud 服务，配置 `BROWSER_USE_API_KEY` 即可绕过大部分反爬虫。

## 贡献

欢迎贡献代码！请遵循以下步骤：

1. Fork 项目
2. 创建特性分支 (`git checkout -b feature/AmazingFeature`)
3. 提交更改 (`git commit -m 'Add some AmazingFeature'`)
4. 推送到分支 (`git push origin feature/AmazingFeature`)
5. 提交 Pull Request

## 许可证

本项目采用 MIT 许可证 - 详见 [LICENSE](LICENSE) 文件

## 致谢

- [browser-use](https://github.com/browser-use/browser-use) - 强大的浏览器自动化框架
- [Google Gemini](https://ai.google.dev/) - 免费的多模态 AI 模型
- [FastAPI](https://fastapi.tiangolo.com/) - 现代化的 Python Web 框架
- [Playwright](https://playwright.dev/) - 可靠的浏览器自动化工具

## 联系方式

- 作者: Shiyuan Chen
- Email: your.email@example.com
- 项目链接: https://github.com/yourusername/super-browser-user

---

⭐ 如果这个项目对你有帮助，请给个 Star！
